

# Use the offical golang image to create a binary.
FROM golang:1.17-buster as builder

# Create and change to the app directory.
WORKDIR /app

# Retrieve application dependencies.
COPY go.* ./
RUN go mod download

# Copy local code to the container image.
COPY . ./

# Build the binary.
RUN go build -v -o server cmd/kbank/kbank_mock.go

# Use the official Debian slim image for a lean production container.
FROM debian:buster-slim
RUN set -x && apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y \
	ca-certificates && \
	rm -rf /var/lib/apt/lists/*
RUN mkdir -p /tmp/logs

# Set timezone.
ENV TZ=Asia/Bangkok

# Create and change to the app directory.
WORKDIR /app

# Copy the binary to the production image from the builder stage.
COPY --from=builder /app/server /server

# Run the service on container startup.
CMD ["/server"]
